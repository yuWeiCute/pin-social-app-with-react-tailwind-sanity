{"version":3,"file":"static/js/208.52748484.chunk.js","mappings":"kPA4HA,UAlHc,WAEZA,SAASC,MAAQ,gDAEjB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAW,SAAC,GAAwB,IAAD,IAArBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAE5BL,GAAgB,GAChB,IAAMM,GACA,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAMC,UAAN,OACAD,QADA,IACAA,OADA,EACAA,EAAME,cADN,OAEAF,QAFA,IAEAA,GAFA,UAEAA,EAAMG,eAFN,iBAEA,EAAeH,YAFf,aAEA,EAAqBI,OAFrB,OAGAJ,QAHA,IAGAA,OAHA,EAGAA,EAAMK,0BACN,+EACIC,GAAW,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMO,SAAN,OAAeP,QAAf,IAAeA,OAAf,EAAeA,EAAMM,MAC5BE,GAAc,OAAJR,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,WAAN,OAAiBR,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMS,IACjCC,GAAY,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMU,QAAS,KACvBC,EAAa,CACjBH,QAASA,EACTI,SAAUb,EACVO,KAAMA,EACNO,SAAUZ,GAEZa,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,IAC5C,IAAMO,EAAM,CACVC,IAAKX,EACLY,MAAO,OACPV,MAAOA,EACPE,SAAUb,EACVsB,SAAUf,EACVgB,MAAOrB,GAGTN,GAAgB,GAChB4B,EAAAA,GAAAA,kBAAyBL,GAAKM,MAAK,WACjC5B,EAAS,IAAK,CAAE6B,SAAS,OACxBC,MAAM/B,GAAgB,KAG3B,OACE,SAAC,QAAD,CACEgC,YAAa,CAAEC,QAAS,CAAC,EAAG,EAAG,IAC/BC,WAAY,CAAEC,SAAU,IACxBC,QAAS,CAAEH,QAAS,GAHtB,UAKE,iBAAKI,UAAU,oDAAf,UAGGtC,IACC,gBAAKsC,UAAU,gCAAf,UAA+C,SAAC,IAAD,CAASC,QAAQ,SAElE,iBAAKD,UAAU,0BAAf,WAEE,kBACEE,IAAKC,EACLC,KAAK,YACLC,MAAI,EACJC,UAAU,EACVC,OAAK,EACLC,UAAQ,EACRR,UAAU,gCAIZ,iBAAKA,UAAU,sGAAf,WAEE,gBAAKA,UAAU,WAAf,UACE,gBAAKE,IAAKO,EAAMC,MAAM,QAAQC,IAAI,QAKpC,iBAAKX,UAAU,aAAf,WAEE,SAAC,KAAD,CACEY,UAAWC,uBACXC,cAAeD,2CACfE,aAAcF,+BACdG,UAAWlD,EACXmD,SAAU,SAACC,GACTC,QAAQC,IAAIF,GACZG,MAAM,gDAPV,UAUE,SAAC,EAAAC,kBAAD,OAGF,SAAC,KAAD,CACEV,UAAWC,2EACXG,UAAWlD,EACXmD,SAAU,SAACC,GACTC,QAAQC,IAAIF,GACZG,MAAM,gDALV,UAQE,SAAC,EAAAE,kBAAD,UAKJ,gC","sources":["container/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { LoginSocialGoogle, LoginSocialGithub } from 'reactjs-social-login'\nimport { GoogleLoginButton, GithubLoginButton } from 'react-social-login-buttons'\nimport { useNavigate } from 'react-router-dom';\nimport shareVideo from '../../shared/assets/share.webm';\nimport logo from '../../shared/assets/logowhite.webp';\nimport { client } from '../../client';\nimport { motion } from 'framer-motion';\nimport Spinner from '../../shared/components/Spinner';\n\nconst Login = () => {\n\n  document.title = 'YUWEI - Login for subscribe and communication'\n\n  const [verification, setVerification] = useState(false);\n\n  const navigate = useNavigate();\n\n  //login (https://www.npmjs.com/package/reactjs-social-login)\n  const response = ({ provider, data }) => {\n    //正在响应数据\n    setVerification(true)\n    const avatar =\n      data?.avatar ||\n      data?.avatar_url ||\n      data?.picture?.data?.url ||\n      data?.profile_image_url_https ||\n      'https://maxcdn.icons8.com/Share/icon/p1em/users//gender_neutral_user1600.png'\n    const name = data?.login || data?.name;\n    const node_id = data?.node_id || data?.id;\n    const email = data?.email || null;\n    const profileObj = {\n      node_id: node_id,\n      platform: provider,\n      name: name,\n      imageUrl: avatar,\n    }\n    localStorage.setItem('user', JSON.stringify(profileObj));\n    const doc = {\n      _id: node_id,\n      _type: 'user',\n      email: email,\n      platform: provider,\n      userName: name,\n      image: avatar,\n    };\n    //正在验证信息\n    setVerification(true)\n    client.createIfNotExists(doc).then(() => {\n      navigate('/', { replace: true });\n    }).catch(setVerification(false));\n  };\n\n  return (\n    <motion.div\n      whileInView={{ opacity: [0, 0, 1] }}\n      transition={{ duration: 0.5 }}\n      initial={{ opacity: 0 }}\n    >\n      <div className=\"flex justify-start items-center flex-col h-screen\">\n        {/* 提示框 */}\n\n        {verification &&\n          <div className=\"fixed z-50  top-2 rounded-2xl\"><Spinner message=\" \" /></div>}\n\n        <div className=\" relative w-full h-full\">\n          {/* 背景 */}\n          <video\n            src={shareVideo}\n            type=\"video/mp4\"\n            loop\n            controls={false}\n            muted\n            autoPlay\n            className=\"w-full h-full object-cover\"\n          />\n\n          {/* 登录 */}\n          <div className=\"absolute flex flex-col justify-center items-center top-0 right-0 left-0 bottom-0    bg-blackOverlay\">\n\n            <div className=\"p-5 z-50\">\n              <img src={logo} width=\"130px\" alt=\"\" />\n            </div>\n\n\n\n            <div className=\"shadow-2xl\">\n\n              <LoginSocialGithub\n                client_id={process.env.REACT_APP_CLIENT_ID}\n                client_secret={process.env.REACT_APP_CLIENT_SECRET}\n                redirect_uri={process.env.REACT_APP_REDIRECT_URI}\n                onResolve={response}\n                onReject={(err) => {\n                  console.log(err)\n                  alert('Failed to get information, please try again')\n                }}\n              >\n                <GithubLoginButton />\n              </LoginSocialGithub>\n\n              <LoginSocialGoogle\n                client_id={process.env.REACT_APP_GOOGLE_API_TOKEN || ''}\n                onResolve={response}\n                onReject={(err) => {\n                  console.log(err)\n                  alert('Failed to get information, please try again')\n                }}\n              >\n                <GoogleLoginButton />\n              </LoginSocialGoogle>\n\n            </div>\n\n            <div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\nexport default Login"],"names":["document","title","useState","verification","setVerification","navigate","useNavigate","response","provider","data","avatar","avatar_url","picture","url","profile_image_url_https","name","login","node_id","id","email","profileObj","platform","imageUrl","localStorage","setItem","JSON","stringify","doc","_id","_type","userName","image","client","then","replace","catch","whileInView","opacity","transition","duration","initial","className","message","src","shareVideo","type","loop","controls","muted","autoPlay","logo","width","alt","client_id","process","client_secret","redirect_uri","onResolve","onReject","err","console","log","alert","GithubLoginButton","GoogleLoginButton"],"sourceRoot":""}